#include<bits/stdc++.h>
int solve(string& a , string& b, int i, int j, vector<vector<int> >& dp){
        if(i == a.length())
            return 0;
        if(j == b.length())
            return 0;

        if(dp[i][j] != -1)
            return dp[i][j];

        int ans = 0;
        if(a[i] == b[j]){
            ans = 1 + solve(a,b,i+1,j+1,dp);
        }
        else{
            ans = max(solve(a,b,i+1,j,dp) , solve(a,b,i,j+1,dp));
        }

        return dp[i][j] = ans;
    }

int minDeletions(string str, int n) { 
    string revStr = str;
    reverse(revStr.begin(),revStr.end());
    vector<vector<int> > dp(n, vector<int>(n,-1));
    int temp = solve(str,revStr,0,0,dp);
    
    return (n-temp);
}
