class Solution
{
    public:
    
    int knapSackMem(int W, int wt[], int val[], int n, vector<vector<int>>&dp){
        if(W==0 || n==0)
            return 0;
        
        if(dp[n][W] != -1)
            return dp[n][W];
        
        if(wt[n-1] > W){
            return dp[n][W] = knapSackMem(W,wt,val,n-1,dp);
        }
        else{
            return dp[n][W] = max(knapSackMem(W,wt,val,n-1,dp) ,
                val[n-1] + knapSackMem(W-wt[n-1],wt,val,n-1,dp));
        }
    }
    int knapSack(int W, int wt[], int val[], int n) 
    { 
       // Your code here
       vector<vector<int> >dp(n+1,vector<int>(W+1,-1));
       return knapSackMem(W,wt,val,n,dp);
       
    }
};
